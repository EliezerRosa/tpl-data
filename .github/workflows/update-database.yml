# Arquivo 1: O Cérebro do Robô de Dados (update-database.yml)
# Propósito: Receber os sinais de novos agendamentos e atualizar o database.json.
# Localização: .github/workflows/update-database.yml

# Nome do nosso robô de dados
name: Update TPL Database

# Gatilho: Acorda quando recebe um sinal do tipo 'nova-transacao'
on:
  repository_dispatch:
    types: [nova-transacao]

jobs:
  update:
    runs-on: ubuntu-latest

    # Garante que apenas uma atualização ocorra por vez
    concurrency:
      group: tpl-database-update
      cancel-in-progress: false

    # Permissões necessárias para o robô
    permissions:
      contents: write

    steps:
      # Passo 1: Fazer o checkout do código
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # USA A CHAVE MESTRA QUE O ROBÔ DE SETUP CRIOU!
          token: ${{ secrets.APP_ACCESS_TOKEN }}

      # Passo 2: Garantir que o banco de dados exista
      - name: Ensure database.json exists
        run: |
          if [ ! -f database.json ]; then
            echo "[]" > database.json
          fi

      # Passo 3: Adicionar a nova transação
      - name: Update database.json
        run: |
          NOVA_TRANSACAO='${{ github.event.client_payload.transaction }}'
          jq --argjson newTx "$NOVA_TRANSACAO" '. += [$newTx]' database.json > temp_db.json
          mv temp_db.json database.json

      # Passo 4: Fazer o commit e push da alteração
      - name: Commit and Push changes
        run: |
          git config --global user.name 'TPL Data Robot'
          git config --global user.email 'actions@github.com'
          git add database.json
          if ! git diff --staged --quiet; then
            git commit -m "chore: Adiciona nova transação via Action"
            git push
          else
            echo "Nenhuma alteração para commitar."
          fi